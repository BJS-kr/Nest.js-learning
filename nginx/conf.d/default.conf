upstream jj_server {
    # 도커 네트워크의 alias
    server app:3000;
}

limit_req_zone $binary_remote_addr zone=ddos_req:20m rate=20r/s;
limit_conn_zone $binary_remote_addr zone=ddos_conn:20m;
#429 too many requests
limit_req_status 429;
server {
    listen 444;
    server_name jj;
    # ssl_certificate     /etc/letsencrypt/live/ruzan.shop/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/ruzan.shop/privkey.pem;
    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
        proxy_set_header 'Access-Control-Allow-Origin' '*';
        # proxy_set_header 'Access-Control-Allow-Credentials' 'true';
        proxy_set_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Origin,X-Auth-Token,Authorization,Accept,Client-Security-Token';
        proxy_set_header 'Access-Control-Allow-Methods' 'OPTIONS, GET, POST, PATCH, PUT, DELETE';
        limit_req zone=ddos_req burst=20 nodelay;
        limit_conn ddos_conn 20;
        # 아래 항목들 기본 값은 60초임. slowloris공격 방어
        client_body_timeout 5s;
        # client_header_timeout 5s;
        # deny xxx.xxx.xxx.xx
        proxy_pass http://jj_server;
        proxy_pass_request_headers on;
        proxy_http_version 1.1;
        
        # # hop-by-hop 헤더를 사용한다 (websocket으로 upgrade)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        # # 받는 대상(WAS)
        proxy_set_header Host $host;
        proxy_connect_timeout 30s;
        proxy_read_timeout 30s;
        proxy_send_timeout 30s;
        proxy_cache_bypass $http_upgrade;
        fastcgi_buffers 8 16k;
        fastcgi_buffer_size 32k;
        fastcgi_connect_timeout 60;
        fastcgi_send_timeout 300;
        fastcgi_read_timeout 300;
        }

    }


server {
    server_name jj;
    listen 80;
    # location / {
    #     proxy_pass http://127.0.0.1:444$request_uri;
    # }
    # docker network안에서 localhost는 127.0.0.1의 alias가 아니다. 즉, 127.0.0.1이라고 명시해줘야 제대로 작동한다.
    return 301 http://127.0.0.1:444$request_uri;
}
